<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:component-scan base-package="com.tungfnq.config" />

	<!-- http://www.jasypt.org/spring31.html -->
	<!-- https://wiki.jasig.org/display/CASUM/HOWTO+Use+Jasypt+to+encrypt+passwords+in+configuration+files -->
	<!--                                                                      -->
	 <!-- Configuration for encryptor, based on environment variables.         -->
	 <!--                                                                      -->
	 <!-- In this example, the encryption password will be read from an        -->
	 <!-- environment variable called "APP_ENCRYPTION_PASSWORD" which, once    --> 
	 <!-- the application has been started, could be safely unset.             -->
	 <!--                                                                      -->
	 <bean id="environmentVariablesConfiguration" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
	   <property name="algorithm" value="PBEWithMD5AndDES" />
	   <!-- <property name="passwordEnvName" value="APP_ENCRYPTION_PASSWORD" /> -->
	  	<property name="password" value="hctra" />
	 </bean>
	  
	 <!--                                                                      -->
	 <!-- The will be the encryptor used for decrypting configuration values.  -->
	 <!--                                                                      -->
	 <bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
	   <property name="config" ref="environmentVariablesConfiguration" />
	 </bean>
	
	
	 <!--                                                                      -->
	 <!-- The EncryptablePropertyPlaceholderConfigurer will read the           -->
	 <!-- .properties files and make their values accessible as ${var}.        -->
	 <!--                                                                      -->
	 <!-- Our "configurationEncryptor" bean (which implements                  --> 
	 <!-- org.jasypt.encryption.StringEncryptor) is set as a constructor arg.  -->
	 <!--                                                                      -->
	 <bean id="sysProps" class="com.tungfnq.jasypt.EncryptablePropertyPlaceholderConfigurer">
		<constructor-arg ref="configurationEncryptor" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="ignoreResourceNotFound" value="false" />
		<property name="order" value="1" />
	   <property name="locations">
	     <list>
	     	<value>classpath:config.properties</value>
<!-- 	       <value>/WEB-INF/classes/application.properties</value> -->
	     </list>
	   </property>
	 </bean>
  
	
	<!-- Database Properties -->
    <!-- <bean id="dbProps" class="com.tungfnq.config.DbPropertySourcesPlaceholderConfigurer"> -->
	<bean id="dbProps" class="com.tungfnq.jasypt.DBEncryptablePropertySourcesPlaceholderConfigurer">
       <constructor-arg ref="configurationEncryptor" />
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="order" value="2" />
        <property name="placeholderPrefix" value="%{" />
        <property name="placeholderSuffix" value="}" />
        
        <property name="dataSourceName" value="dataSource" />
        
        <!--  <property name="dbTableName" value="RITE_COMMON.SYS_PARAMS"/> -->
        <property name="dbTableName" value="APP_CNF.APP_CNF_PARAM"/>
        
        <property name="dbKeyColumnName" value="NAME"/>
        <property name="dbValueColumnName" value="VALUE"/>
        
        <property name="propNames">
			<list>
				<value>JMS_URL</value>
				<value>JMS_URL1</value>
			</list>
		</property>
        
      <!--   <property name="locations">
            <list>
                <value>classpath:static.properties</value>
                <value>file:static.properties</value>
            </list>
        </property> -->

    </bean>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		
		<!-- <property name="url" value="jdbc:postgresql://192.168.99.100:32768/app_conf" />
		<property name="username" value="tungfnq" />
		<property name="password" value="tungfnq99" /> -->
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- a PlatformTransactionManager is still required -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
    
    <!--  -->
    <bean id="sysParam" class="com.tungfnq.bean.SysParam">
    	<property name="name" value="JMS_URL"/>
    	<property name="value" value="%{JMS_URL}"/>
    </bean>
    
    <bean id="sysParam1" class="com.tungfnq.bean.SysParam">
    	<property name="name" value="jdbc.url"/>
    	<property name="value" value="${jdbc.url}"/>
    </bean>
    <bean id="sysParam2" class="com.tungfnq.bean.SysParam">
    	<property name="name" value="${jdbc.username}"/>
    	<property name="value" value="${jdbc.password}"/>
    </bean>
</beans>
